import pydantic
import typing
import typing_extensions


if typing_extensions.TYPE_CHECKING:
    from .connect_account_reference import ConnectAccountReference


class InvoiceSettingQuoteSetting(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    days_until_due: typing.Optional[int] = pydantic.Field(
        alias="days_until_due", default=None
    )
    """
    Number of days within which a customer must pay invoices generated by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.
    """
    issuer: "ConnectAccountReference" = pydantic.Field(
        alias="issuer",
    )
